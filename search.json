[{"path":"https://extendr.github.io/tomledit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 tomledit authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://extendr.github.io/tomledit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josiah Parry. Author, maintainer.","code":""},{"path":"https://extendr.github.io/tomledit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parry J (2025). tomledit: Parse, Read, Edit 'TOML'. R package version 0.1.1, https://extendr.github.io/tomledit/.","code":"@Manual{,   title = {tomledit: Parse, Read, and Edit 'TOML'},   author = {Josiah Parry},   year = {2025},   note = {R package version 0.1.1},   url = {https://extendr.github.io/tomledit/}, }"},{"path":"https://extendr.github.io/tomledit/index.html","id":"tomledit","dir":"","previous_headings":"","what":"Parse, Read, and Edit TOML","title":"Parse, Read, and Edit TOML","text":"Create edit TOML documents R using tomledit. tomledit written Rust using extendr toml_edit crate.","code":""},{"path":"https://extendr.github.io/tomledit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Parse, Read, and Edit TOML","text":"Install package CRAN using , install development version using","code":"install.packages(\"tomledit\") remotes::install_github(\"extendr/tomledit\")"},{"path":"https://extendr.github.io/tomledit/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Parse, Read, and Edit TOML","text":"TOML can created using either as_toml() toml() functions. Use as_toml() convert list TOML: Create TOML directly passing key values toml(): , parse string TOML preserving comments: Write Toml object file using write_toml(). Read TOML file using read_toml(). Items can inserted Toml document using insert_items() items can removed well using remove_items() Individual items can fetched recursively Toml document. entire Toml document can converted list. Note, though, always possible perform perfect round trip R objects TOML.","code":"library(tomledit)  as_toml(   list(     person = list(age = 30L, name = \"Wilma\")   ) ) <Toml> [person] age = 30 name = \"Wilma\" x <- toml(person = list(age = 30L, name = \"Wilma\")) x <Toml> [person] age = 30 name = \"Wilma\" raw_toml <- '# Top-level table begins. name = \"Fido\" breed = \"pug\"  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04'  x <- parse_toml(raw_toml) x <Toml> # Top-level table begins. name = \"Fido\" breed = \"pug\"  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04 tmp <- tempfile(fileext = \".toml\")  write_toml(x, tmp) read_toml(tmp) <Toml> # Top-level table begins. name = \"Fido\" breed = \"pug\"  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04 y <- x |>    insert_items(     date = Sys.Date(),     date_parts = list(year = 2015L, month = \"February\", day = 7L)   )  y <Toml> # Top-level table begins. name = \"Fido\" breed = \"pug\" date = 2025-03-03  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04  [date_parts] year = 2015 month = \"February\" day = 7 remove_items(y, c(\"date\", \"date_parts\")) <Toml> # Top-level table begins. name = \"Fido\" breed = \"pug\"  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04 get_item(y, c(\"date_parts\", \"month\")) [1] \"February\" from_toml(y) $name [1] \"Fido\"  $breed [1] \"pug\"  $owner $owner$name [1] \"Regina Dogman\"  $owner$member_since [1] \"1999-08-04\"   $date [1] \"2025-03-03\"  $date_parts $date_parts$year [1] 2015  $date_parts$month [1] \"February\"  $date_parts$day [1] 7"},{"path":"https://extendr.github.io/tomledit/index.html","id":"array-of-tables","dir":"","previous_headings":"","what":"Array of Tables","title":"Parse, Read, and Edit TOML","text":"default tomledit converts data.frame objects array tables. default behavior consistent TOML files encountered wild. create single table data.frame, set argument df_as_array = FALSE.","code":"toml(iris = iris[1:3,]) <Toml> [[iris]] \"Sepal.Length\" = 5.1 \"Sepal.Width\" = 3.5 \"Petal.Length\" = 1.4 \"Petal.Width\" = 0.2 Species = \"setosa\"  [[iris]] \"Sepal.Length\" = 4.9 \"Sepal.Width\" = 3.0 \"Petal.Length\" = 1.4 \"Petal.Width\" = 0.2 Species = \"setosa\"  [[iris]] \"Sepal.Length\" = 4.7 \"Sepal.Width\" = 3.2 \"Petal.Length\" = 1.3 \"Petal.Width\" = 0.2 Species = \"setosa\" toml(   iris = iris[1:3,],   df_as_array = FALSE ) <Toml> [iris] \"Sepal.Length\" = [5.1, 4.9, 4.7] \"Sepal.Width\" = [3.5, 3.0, 3.2] \"Petal.Length\" = [1.4, 1.4, 1.3] \"Petal.Width\" = [0.2, 0.2, 0.2] Species = [\"setosa\", \"setosa\", \"setosa\"]"},{"path":"https://extendr.github.io/tomledit/index.html","id":"missing-values","dir":"","previous_headings":"","what":"Missing Values","title":"Parse, Read, and Edit TOML","text":"One reason array tables recommended data.frames concept missing null value TOML. Take following example: Notice data.frame serialized TOML missing x value omitted: Whereas serializing single table x array 2 elements whereas y element 3 elements.","code":"x <- data.frame(   x = c(1L, NA, 2L),   y = letters[1:3] ) toml(table = x) <Toml> [[table]] x = 1 y = \"a\"  [[table]] y = \"b\"  [[table]] x = 2 y = \"c\" toml(table = x, df_as_array = FALSE) <Toml> [table] x = [1, 2] y = [\"a\", \"b\", \"c\"]"},{"path":"https://extendr.github.io/tomledit/reference/from_toml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Toml to an R object — from_toml","title":"Convert Toml to an R object — from_toml","text":"Use from_toml() convert Toml document R object. Note due encoding values TOML specification perfect round trip TOML R always possible.","code":""},{"path":"https://extendr.github.io/tomledit/reference/from_toml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Toml to an R object — from_toml","text":"","code":"from_toml(x)"},{"path":"https://extendr.github.io/tomledit/reference/from_toml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Toml to an R object — from_toml","text":"x Toml object.","code":""},{"path":"https://extendr.github.io/tomledit/reference/from_toml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Toml to an R object — from_toml","text":"list","code":""},{"path":"https://extendr.github.io/tomledit/reference/from_toml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Toml to an R object — from_toml","text":"","code":"from_toml(toml(hello = \"world\")) #> $hello #> [1] \"world\" #>"},{"path":"https://extendr.github.io/tomledit/reference/modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a Toml object — remove_items","title":"Modify a Toml object — remove_items","text":"remove_items() removes one items TOML document. Alternatively, insert_items() inserts key value pairs TOML document.","code":""},{"path":"https://extendr.github.io/tomledit/reference/modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a Toml object — remove_items","text":"","code":"remove_items(x, keys)  insert_items(x, ..., df_as_array = TRUE)  get_item(x, key)"},{"path":"https://extendr.github.io/tomledit/reference/modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify a Toml object — remove_items","text":"x object class Toml. keys character vector key names remove. contain missing values. ... named items serialized TOML. df_as_array default TRUE. Creates array tables data.frame. FALSE, creates single table array column data.frame. key character vector key values. keys used recursively. example key = c(\"\", \"b\") item grabbed first, b searched inside .","code":""},{"path":"https://extendr.github.io/tomledit/reference/modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify a Toml object — remove_items","text":"object class Toml","code":""},{"path":"https://extendr.github.io/tomledit/reference/modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify a Toml object — remove_items","text":"","code":"x <- toml(   date = list(     full = as.Date(\"2025-02-07\"),     parts = list(year = 2015L, month = \"February\", day = 7L)   ),   season = \"winter\" )  # fetch the date table get_item(x, \"date\") #> $full #> [1] \"2025-02-07\" #>  #> $parts #> $parts$year #> [1] 2015 #>  #> $parts$month #> [1] \"February\" #>  #> $parts$day #> [1] 7 #>  #>   # fetch the month value get_item(x, c(\"date\", \"parts\", \"month\")) #> [1] \"February\"  # remove an item based on name remove_items(x, \"season\") #> <Toml> #> [date] #> full = 2025-02-07 #> parts = { year = 2015, month = \"February\", day = 7 }  # add multiple items insert_items(x, temperature = 31, cloudy = TRUE) #> <Toml> #> season = \"winter\" #> temperature = 31.0 #> cloudy = true #>  #> [date] #> full = 2025-02-07 #> parts = { year = 2015, month = \"February\", day = 7 }"},{"path":"https://extendr.github.io/tomledit/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parse TOML — parse_toml","title":"Read and parse TOML — parse_toml","text":"Use parse_toml() parse string Toml document. Use read_toml() read .toml file disk.","code":""},{"path":"https://extendr.github.io/tomledit/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parse TOML — parse_toml","text":"","code":"parse_toml(x)  read_toml(file)"},{"path":"https://extendr.github.io/tomledit/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parse TOML — parse_toml","text":"x character scalar containing valid TOML file path file  write.","code":""},{"path":"https://extendr.github.io/tomledit/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parse TOML — parse_toml","text":"object class Toml","code":""},{"path":"https://extendr.github.io/tomledit/reference/read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and parse TOML — parse_toml","text":"","code":"# TOML string raw_toml <- '# Top-level table begins. name = \"Fido\" breed = \"pug\"  # Top-level table ends. [owner] name = \"Regina Dogman\" member_since = 1999-08-04'  # write the TOML string to a temp file tmp <- tempfile() writeLines(raw_toml, tmp)  # parse the TOML string parse_toml(raw_toml) #> <Toml> #> # Top-level table begins. #> name = \"Fido\" #> breed = \"pug\" #>  #> # Top-level table ends. #> [owner] #> name = \"Regina Dogman\" #> member_since = 1999-08-04  # read the TOML file read_toml(tmp) #> <Toml> #> # Top-level table begins. #> name = \"Fido\" #> breed = \"pug\" #>  #> # Top-level table ends. #> [owner] #> name = \"Regina Dogman\" #> member_since = 1999-08-04"},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Toml objects — as_toml","title":"Create Toml objects — as_toml","text":"Use as_toml() convert named list Toml object. , create Toml object passing named values toml().","code":""},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Toml objects — as_toml","text":"","code":"as_toml(x, df_as_array = TRUE)  toml(..., df_as_array = TRUE)"},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Toml objects — as_toml","text":"x named list df_as_array default TRUE. Creates array tables data.frame. FALSE, creates single table array column data.frame. ... named items serialized TOML.","code":""},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Toml objects — as_toml","text":"object class Toml","code":""},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Toml objects — as_toml","text":"serializing data.frame single table df_as_array = FALSE, note missing values omitted serializing vector array concept missing values TOML.","code":""},{"path":"https://extendr.github.io/tomledit/reference/toml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Toml objects — as_toml","text":"","code":"toml(person = list(age = 30L, name = \"Wilma\")) #> <Toml> #> [person] #> age = 30 #> name = \"Wilma\"  as_toml(   list(     person = list(age = 30L, name = \"Wilma\")   ) ) #> <Toml> #> [person] #> age = 30 #> name = \"Wilma\""},{"path":"https://extendr.github.io/tomledit/reference/tomledit-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tomledit: Parse, Read, and Edit 'TOML' — tomledit-package","title":"tomledit: Parse, Read, and Edit 'TOML' — tomledit-package","text":"toolkit working 'TOML' files R preserving formatting, comments, structure. 'tomledit' enables serialization R objects lists, data.frames, numeric, logical, date vectors.","code":""},{"path":[]},{"path":"https://extendr.github.io/tomledit/reference/tomledit-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tomledit: Parse, Read, and Edit 'TOML' — tomledit-package","text":"Maintainer: Josiah Parry josiah.parry@gmail.com (ORCID)","code":""},{"path":"https://extendr.github.io/tomledit/reference/write.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate TOML — write_toml","title":"Generate TOML — write_toml","text":"Write Toml object file string. Use write_toml() write file disk. , use to_toml() create string containing TOML.","code":""},{"path":"https://extendr.github.io/tomledit/reference/write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate TOML — write_toml","text":"","code":"write_toml(x, file)  to_toml(x)"},{"path":"https://extendr.github.io/tomledit/reference/write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate TOML — write_toml","text":"x object class Toml. file path file  write.","code":""},{"path":"https://extendr.github.io/tomledit/reference/write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate TOML — write_toml","text":"write_toml() returns Toml object invisibly. to_toml() returns string.","code":""},{"path":"https://extendr.github.io/tomledit/reference/write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate TOML — write_toml","text":"","code":"tmp <- tempfile(fileext = \".toml\")  x <- toml(   today = Sys.Date(),   human = list(person = \"Greg\", age = 29, bday = \"1969-07-02\"), )  write_toml(x, tmp) read_toml(tmp) #> <Toml> #> today = 2025-05-31 #>  #> [human] #> person = \"Greg\" #> age = 29.0 #> bday = \"1969-07-02\" to_toml(x) #> [1] \"today = 2025-05-31\\n\\n[human]\\nperson = \\\"Greg\\\"\\nage = 29.0\\nbday = \\\"1969-07-02\\\"\\n\""},{"path":"https://extendr.github.io/tomledit/news/index.html","id":"tomledit-development-version","dir":"Changelog","previous_headings":"","what":"tomledit (development version)","title":"tomledit (development version)","text":"Unnamed lists now turned array items. named listed treated inline tables.","code":""},{"path":"https://extendr.github.io/tomledit/news/index.html","id":"tomledit-010","dir":"Changelog","previous_headings":"","what":"tomledit 0.1.0","title":"tomledit 0.1.0","text":"CRAN release: 2025-02-13 Added NEWS.md file track changes package.","code":""}]
